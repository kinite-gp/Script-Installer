from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from zipfile import ZipFile
import psutil
from time import sleep
import os
import shutil

PATH = os.path.dirname(os.path.realpath(__file__))
print(PATH)


class Ui_main(object):
    def setupUi(self, main):
        main.setObjectName("main")
        main.resize(460, 640)
        main.setMinimumSize(QtCore.QSize(460, 640))
        main.setMaximumSize(QtCore.QSize(460, 640))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        main.setFont(font)
        main.setWindowOpacity(0.9)
        main.setIconSize(QtCore.QSize(0, 0))
        self.centralwidget = QtWidgets.QWidget(main)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(4, 2, 451, 101))
        font = QtGui.QFont()
        font.setFamily("Noto Serif Cond")
        font.setPointSize(37)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.pushButton.setFont(font)
        self.pushButton.setAutoExclusive(False)
        self.pushButton.setAutoDefault(False)
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.automaticsearch = QtWidgets.QPushButton(self.centralwidget)
        self.automaticsearch.setGeometry(QtCore.QRect(30, 120, 401, 41))
        self.automaticsearch.clicked.connect(self.get_auto_location)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.automaticsearch.setFont(font)
        self.automaticsearch.setObjectName("automaticsearch")
        self.gtalocation = QtWidgets.QLineEdit(self.centralwidget)
        self.gtalocation.setGeometry(QtCore.QRect(30, 220, 401, 41))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.gtalocation.setFont(font)
        self.gtalocation.setInputMask("")
        self.gtalocation.setText("")
        self.gtalocation.setReadOnly(True)
        self.gtalocation.setObjectName("gtalocation")
        self.manualsearch = QtWidgets.QPushButton(self.centralwidget)
        self.manualsearch.setGeometry(QtCore.QRect(30, 170, 401, 41))
        self.manualsearch.clicked.connect(self.get_manu_location)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.manualsearch.setFont(font)
        self.manualsearch.setAutoDefault(False)
        self.manualsearch.setDefault(True)
        self.manualsearch.setObjectName("manualsearch")
        self.luaplugin = QtWidgets.QPushButton(self.centralwidget)
        self.luaplugin.setGeometry(QtCore.QRect(30, 290, 121, 41))
        self.luaplugin.clicked.connect(self.install_LUA)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.luaplugin.setFont(font)
        self.luaplugin.setAutoDefault(False)
        self.luaplugin.setDefault(False)
        self.luaplugin.setObjectName("luaplugin")
        self.scriptvhookdotnet = QtWidgets.QPushButton(self.centralwidget)
        self.scriptvhookdotnet.setGeometry(QtCore.QRect(170, 290, 121, 41))
        self.scriptvhookdotnet.clicked.connect(self.install_script_hook_v_dot_net)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.scriptvhookdotnet.setFont(font)
        self.scriptvhookdotnet.setAutoDefault(False)
        self.scriptvhookdotnet.setDefault(False)
        self.scriptvhookdotnet.setObjectName("scriptvhookdotnet")
        self.scriptvhook = QtWidgets.QPushButton(self.centralwidget)
        self.scriptvhook.setGeometry(QtCore.QRect(310, 290, 121, 41))
        self.scriptvhook.clicked.connect(self.install_script_hook_v)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.scriptvhook.setFont(font)
        self.scriptvhook.setAutoDefault(False)
        self.scriptvhook.setDefault(True)
        self.scriptvhook.setObjectName("scriptvhook")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(17, 269, 431, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(20, 330, 421, 31))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.lineEditzipfile = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEditzipfile.setGeometry(QtCore.QRect(30, 460, 321, 41))
        self.lineEditzipfile.setObjectName("lineEditzipfile")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 360, 461, 61))
        font = QtGui.QFont()
        font.setFamily("Noto Serif Cond")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 440, 401, 20))
        self.label_2.setObjectName("label_2")
        self.browsezipfile = QtWidgets.QPushButton(self.centralwidget)
        self.browsezipfile.setGeometry(QtCore.QRect(350, 460, 81, 41))
        self.browsezipfile.setObjectName("browsezipfile")
        self.unziplocation = QtWidgets.QRadioButton(self.centralwidget)
        self.unziplocation.setGeometry(QtCore.QRect(30, 510, 401, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.unziplocation.setFont(font)
        self.unziplocation.setObjectName("unziplocation")
        self.unzipscript = QtWidgets.QRadioButton(self.centralwidget)
        self.unzipscript.setGeometry(QtCore.QRect(31, 540, 401, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.unzipscript.setFont(font)
        self.unzipscript.setObjectName("unzipscript")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(30, 580, 401, 31))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setTextVisible(False)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setObjectName("progressBar")
        self.status = QtWidgets.QLabel(self.centralwidget)
        self.status.setGeometry(QtCore.QRect(30, 580, 401, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.status.setFont(font)
        self.status.setAlignment(QtCore.Qt.AlignCenter)
        self.status.setObjectName("status")
        main.setCentralWidget(self.centralwidget)

        self.retranslateUi(main)
        QtCore.QMetaObject.connectSlotsByName(main)
        
    def get_auto_location(self):
        pids = psutil.pids()
        for pid in pids:
            a = psutil.Process(pid).name()
            if "PlayGTAV.exe" == a or "GTA5.exe" == a:
                print(psutil.Process(pid).cwd())
                self.gtalocation.setText(psutil.Process(pid).cwd())
                sleep(2)
                os.system("taskkill /f /im  PlayGTAV.exe")
                os.system("taskkill /f /im  GTA5.exe")
                print("killed")
                self.status.setText("Set Location Auto!!!")
                break
        
            
    def get_manu_location(self):
        url = QtWidgets.QFileDialog.getExistingDirectory()
        # url = QtGui.QFileDialog.getExistingDirectory(self)
        self.gtalocation.setText(url)
        self.status.setText("Set Location Manual!!!")
        
    def install_script_hook_v(self):
        dir = self.gtalocation.text()
        dir = dir.replace("/","\\")
        try:
            os.mkdir(self.gtalocation.text()+"\\Script")
            os.system(f"powershell copy .\\data\\dinput8.dll '{dir}'")
            os.system(f"powershell copy .\\data\\NativeTrainer.asi '{dir}'")
            os.system(f"powershell copy .\\data\\ScriptHookV.dll '{dir}'")
            self.status.setText("Install Script Hook V!!!")
        except:
            self.status.setText("Can't Install Script Hook V!?")
            
    def install_script_hook_v_dot_net(self):
        dir = self.gtalocation.text()
        dir = dir.replace("/","\\")
        print(dir)
        try:
            os.system(f"powershell copy .\\data\\LICENSE.txt '{dir}'")
            os.system(f"powershell copy .\\data\\README.txt '{dir}'")
            os.system(f"powershell copy .\\data\\ScriptHookVDotNet.asi '{dir}'")
            os.system(f"powershell copy .\\data\\ScriptHookVDotNet.ini '{dir}'")
            os.system(f"powershell copy .\\data\\ScriptHookVDotNet2.dll '{dir}'")
            os.system(f"powershell copy .\\data\\ScriptHookVDotNet2.xml '{dir}'")
            os.system(f"powershell copy .\\data\\ScriptHookVDotNet3.dll '{dir}'")
            os.system(f"powershell copy .\\data\\ScriptHookVDotNet3.xml '{dir}'")
            self.status.setText("Install Script Hook V DotNet!!!")
        except:
            self.status.setText("Can't Install Script Hook V DotNet!?")

    def install_LUA(self):
            dir = self.gtalocation.text()
            dir = dir.replace("/","\\")
            
            try:
                os.system(f"powershell copy .\\data\\LUA.asi '{dir}'")
                os.mkdir(self.gtalocation.text()+"\\Script\\addins")
                os.mkdir(self.gtalocation.text()+"\\Script\\libs")
                
                os.system(f"powershell copy .\\data\\README.txt '{dir}'")
                os.system(f"powershell copy .\\data\\keys.lua '{dir}\\Script'")
                os.system(f"powershell copy .\\data\\main.lua '{dir}\\Script'")
                os.system(f"powershell copy .\\data\\utils.lua '{dir}\\Script'")
                os.system(f"powershell copy .\\data\\GUI.lua '{dir}\\Script\\libs'")
                os.system(f"powershell copy .\\data\\basemodule.lua '{dir}\\Script\\addins'")
                os.system(f"powershell copy .\\data\\exampleGUI.lua '{dir}\\Script\\addins'")
                self.status.setText("Install LUA!!!")
            except:
                self.status.setText("Can't Install LUA!?")



    def retranslateUi(self, main):
        _translate = QtCore.QCoreApplication.translate
        main.setWindowTitle(_translate("main", "Script Installer"))
        self.pushButton.setText(_translate("main", "Script Installer"))
        self.automaticsearch.setText(_translate("main", "Automatic search to find the installation location of gta v"))
        self.manualsearch.setText(_translate("main", "Manual search to find where to install gta v (recommend)"))
        self.luaplugin.setText(_translate("main", "LUA plugin"))
        self.scriptvhookdotnet.setText(_translate("main", "ScriptHookVDotNet"))
        self.scriptvhook.setText(_translate("main", "Script Hook V"))
        self.label.setText(_translate("main", "Mod Installer"))
        self.label_2.setText(_translate("main", "add zip file:"))
        self.browsezipfile.setText(_translate("main", "Browse"))
        self.unziplocation.setText(_translate("main", "Unzip to Home location GTA-V"))
        self.unzipscript.setText(_translate("main", "Unzip to Script folder"))
        self.status.setText(_translate("main", "Welcome"))




        
        
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_main()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())